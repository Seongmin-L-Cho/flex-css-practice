/*  box -> 한개 박스. 옆에 아무것도 못옴 / inline-box : 한줄 박스 / inline - 한줄 element. width, display 안먹힘*/

.father {
  display: flex;
  justify-content: space-around; /*flex box 조정 center면 중앙에 배치되는 식. main-axis에 종속*/
  /*align-items: stretch;  cross-axis에 종속 디폴트는 flex start*/
  height: 100vh; /* height가 없으면 align~~ 들이 작동을 안함. 왜냐면 높이가 박스크기에 맞춰지기 때문.*/
  flex-wrap: wrap;
  /* align-content : 2줄 이상 입력 될 때 cross-axis로 배치되는 공간의 조절 */
}
/* flex container 사용법 - div 를 감싸는 display : flex */
/* flex -direction : flex 내부 박스들의 정렬. 기본은 row(가로). row-reverse 등으로 역방향 진행 가능*/
/* main axis -> flex -direction 가 row일 때 가로 . cross-axis는 세로*/
/* flex의 특징 중 하나는 넓이 / 높이의 크기보단 보단 한줄에 보이게 하는걸 신경 쓴다 한줄에 보일 수 있다면 width 를 깨트린다.
 flex-wrap :wrap 을 지정하면 child의 width를 존중
  wrap-reverse라는 순서 뒤집기도 있는데, 이건 위아래가 뒤집힌다. 1~3이 3~1로 배열되는게 아니라 밑에 있던게 위로 올라가는 형상
*/

.child {
  flex-basis: 300px;
  background: peru;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 50px;
}
/* flex-basis : 처음 시작 크기. shrink 등이 일어나기 전의 크기. main-axis에 적용.*/
/*align self 는 align-items랑 비슷한 거지만(cross-axis), 하나에만 영향을 미침*/
/*order : 순서 조정. html을 못건드릴 경우 사용할수 있다 기본은 0. 앞뒤의 order와 비교해서 순서를 맞춘다*/
/*flex-shrink : 기본은 1. 2가 되면 지정 안된 부분 보다 2배 많이 찌그러짐. 3이면 3배. 
flex-grow는 반대로 커짐. 단 box 주변 공간을 가져가는 거라서, 무작정 크게 설정한다고 커지진 않음. 100을 한다고 무작정 100배 크기는 아니란 것 

*/
.child:nth-child(2) {
  background-color: black;
  flex-grow: 1;
}
