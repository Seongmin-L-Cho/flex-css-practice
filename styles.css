body {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Oxygen,
    Ubuntu, Cantarell, "Open Sans", "Helvetica Neue", sans-serif;
}

/* .father {
  display: grid;
  grid-template-columns: 250px 250px 400px;
  column-gap: 10px;
  row-gap: 10px;
} */
/*css grid는 flex만 하면 가운데 box가 비는 등의 문제가 생겨서 도입. 
거의 모든 컨트롤을 father에서 하게됨 */
/* grid-template- : 내가 원하는 grid 갯수와 크기 결정. 만약에 지정을 3개만 했는데, html은 4+a 개면 크기가 순차적으로 반복됨*/
/* gap(column-gap / row-gap): 사이 갭 크기*/
/* .child {
  background: peru;
  color: white;
  font-size: 3px;
  display: flex;
  justify-content: center;
  align-items: center;
} */

.grid {
  display: grid;
  gap: 10px;
  grid-template-columns: [first-line] 100px [second-line] 100px [third-line] 100px [fourth-line] 100px [fifth-line];
  grid-template-rows: repeat(4, 100px [sexy-line]);
}

/* grid는 vertical 이 기본. 기본일떄는 column 이 가로다*/
/* GRID-TEMPLATE-AREAS를 4*4로 만들어 놓았다고 가정했을 때, auto 200px 는 두번째 GRID만 200px 적용이고 나머지 1, 3,4 그리드 들은 auto로 되서 auto 200px auto auto 이렇게 적용이 된다. */
/* 하지만 grid-template-areas를 적용하지 않은 상태에서 auto 200px은 단순히 row가 2개이고, 첫번째 그리드의 width는 될수 있는 한 최대로 생기고, 두번째 그리드의 width는 200고정이다 */
/* repeat : 같은걸 반복해서 사용해서 만들때 아주 편함 */
/* grid-template-areas: 레이아웃 만들기. 레이아웃이 어떻게 보여야하는지 지정 가능.*/
/*  grid-template-columns: [first-line] 100px  라인 이름 부여 */
.header {
  background-color: #2ecc71;
  grid-column: span 4;
}
/* grid-area가 그리드 이름을 결정. grid-template-areas와 연동. 클래스 이름은 이경우 아무것도 안한다 grid-area: header; 와 같은식. string 으로 지정하는거 아님*/
/* grid-column-start / grid-column-end grid-row-start / grid-row-end-> 차지할 라인을 지정한다. 시작과 끝 start :1 end :3 이라면 1번 라인부터 3번 라인까지 차지 한다. 라인이란 gap이 한개 라인이라 보면 편하다*/
/* 1/ 3 과 같은 방식으로 요약 가능. 
-1 이라고 하면 끝까지 같다는 의미. -2 하면 끝에서 두번 째.. -3 은 끝에서 3번째 */
/* span 이라고 하면 4번째 줄이란 의미. 이런식으로도 할 수 있다*/
/* span의 경우 같은 라인에 2개 요소가 있을 때는 starting 포인트가 필요해서 그냥 sapn 4 로는 불가능*/
.content {
  background-color: #3498db;
  grid-column: first-line / fourth-line;
  grid-row: sexy-line 1 / sexy-line 3;
}

/* grid-row / grid-column을 사용해서 순서를 바꿀수도 있다. */
.nav {
  background-color: #8e44ad;
  grid-row: 2 / 4;
}

.footer {
  background-color: #f39c12;
  grid-column: span 4;
}
